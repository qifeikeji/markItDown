name: Build AppImage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python-is-python3 build-essential
        
    - name: Install dependencies
      run: |
        npm install
        npm uninstall node-sass
        npm install --save-dev sass electron electron-builder @electron-forge/cli
        
    - name: Create electron main file
      run: |
        mkdir -p src/electron
        echo 'const { app, BrowserWindow } = require("electron");
        const path = require("path");
        const isDev = require("electron-is-dev");

        function createWindow() {
          const win = new BrowserWindow({
            width: 1200,
            height: 800,
            webPreferences: {
              nodeIntegration: true,
              contextIsolation: false
            }
          });

          win.loadURL(
            isDev
              ? "http://localhost:3000"
              : `file://${path.join(__dirname, "../build/index.html")}`
          );
        }

        app.whenReady().then(createWindow);

        app.on("window-all-closed", () => {
          if (process.platform !== "darwin") {
            app.quit();
          }
        });

        app.on("activate", () => {
          if (BrowserWindow.getAllWindows().length === 0) {
            createWindow();
          }
        });' > src/electron/main.js

    - name: Update package.json
      run: |
        npm pkg set main="src/electron/main.js"
        npm pkg set scripts.electron-dev="electron ."
        npm pkg set scripts.electron-pack="electron-builder -c.extraMetadata.main=src/electron/main.js"
        
    - name: Build React app
      run: npm run build
      
    - name: Build AppImage
      run: |
        npm run electron-pack -- --linux AppImage
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: markItDown.AppImage
        path: dist/*.AppImage 
