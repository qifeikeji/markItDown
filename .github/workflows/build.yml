name: Build AppImage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python-is-python3 build-essential
        
    - name: Install dependencies
      run: |
        npm install
        npm uninstall node-sass
        npm install --save sass electron-is-dev
        npm install --save-dev electron@22.3.27 electron-builder@23.6.0
        
    - name: Create electron main file
      run: |
        echo 'const { app, BrowserWindow } = require("electron");
        const path = require("path");
        const isDev = require("electron-is-dev");

        function createWindow() {
          const win = new BrowserWindow({
            width: 1200,
            height: 800,
            webPreferences: {
              nodeIntegration: true,
              contextIsolation: false
            }
          });

          win.loadURL(
            isDev
              ? "http://localhost:3000"
              : `file://${path.join(__dirname, "build/index.html")}`
          );
        }

        app.whenReady().then(createWindow);

        app.on("window-all-closed", () => {
          if (process.platform !== "darwin") {
            app.quit();
          }
        });

        app.on("activate", () => {
          if (BrowserWindow.getAllWindows().length === 0) {
            createWindow();
          }
        });' > electron.js

    - name: Update package.json
      run: |
        npm pkg set main="electron.js"
        npm pkg set scripts.electron-dev="electron ."
        npm pkg set scripts.electron-pack="electron-builder"
        npm pkg set build.files="['build/**/*', 'electron.js', 'node_modules/**/*']"
        npm pkg set build.asar=true
        npm pkg set build.asarUnpack="['node_modules/electron-is-dev/**/*']"
        npm pkg set build.appId="com.markitdown.app"
        npm pkg set build.productName="MarkItDown"
        npm pkg set build.linux.target="['AppImage']"
        npm pkg set build.linux.category="Office"
        
    - name: Build React app
      run: npm run build
      
    - name: Configure npm
      run: |
        npm config set electron_mirror https://npmmirror.com/mirrors/electron/
        npm config set electron-builder-binaries_mirror https://npmmirror.com/mirrors/electron-builder-binaries/
        
    - name: Build AppImage
      run: |
        echo "Starting build process..."
        npm run electron-pack -- --linux AppImage
        echo "Build completed, checking output..."
        ls -la dist/
      env:
        DEBUG: electron-builder
        ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Make AppImage executable
      run: |
        chmod +x dist/*.AppImage
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: markItDown.AppImage
        path: dist/*.AppImage 
